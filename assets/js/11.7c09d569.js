(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{441:function(t,a,s){"use strict";s.r(a);var r=s(16),e=Object(r.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"my-rpc"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#my-rpc"}},[t._v("#")]),t._v(" My-RPC")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://github.com/Mahongsheng/my-rpc",target:"_blank",rel:"noopener noreferrer"}},[t._v("GitHub项目地址"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("参照慕课网"),s("a",{attrs:{href:"https://www.imooc.com/learn/1158",target:"_blank",rel:"noopener noreferrer"}},[t._v("《自己动手实现RPC框架》"),s("OutboundLink")],1),t._v("课程实现的简易RPC框架，在原有项目基础上优化了部分代码结构、添加更加详尽的注释并总结笔记。")]),t._v(" "),s("h2",{attrs:{id:"什么是rpc"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是rpc"}},[t._v("#")]),t._v(" 什么是RPC")]),t._v(" "),s("p",[t._v("RPC是远程过程调用（Remote Procedure Call）的缩写形式。")]),t._v(" "),s("p",[t._v("假设我们有两台服务器A与B，一个在A服务器上部署的应用想要调用B服务器上部署的应用的函数、方法，由于不在同一个内存空间，不能直接调用，因此需要通过网络来表达调用的语义和传达调用的数据。在Java中，即将被调用的类、方法、参数序列化后通过网络传到目标应用，通过反射的方式调用执行。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://github.com/Mahongsheng/my-rpc/raw/main/images/RPC%E6%95%B4%E4%BD%93%E6%9E%B6%E6%9E%84.png",alt:"整体架构"}})]),t._v(" "),s("h2",{attrs:{id:"数据交换方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据交换方式"}},[t._v("#")]),t._v(" 数据交换方式")]),t._v(" "),s("p",[t._v("利用中间件进行数据交换")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://github.com/Mahongsheng/my-rpc/raw/main/images/%E4%B8%AD%E9%97%B4%E4%BB%B6-%E6%95%B0%E6%8D%AE%E4%BA%A4%E4%BA%92.png",alt:"中间件-数据交互"}})]),t._v(" "),s("p",[t._v("直接进行数据交换")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://github.com/Mahongsheng/my-rpc/raw/main/images/%E7%9B%B4%E6%8E%A5%E6%95%B0%E6%8D%AE%E4%BA%A4%E4%BA%92.png",alt:"直接数据交互"}})]),t._v(" "),s("h2",{attrs:{id:"现有rpc框架对比"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#现有rpc框架对比"}},[t._v("#")]),t._v(" 现有RPC框架对比")]),t._v(" "),s("p",[t._v("目前主流的RPC框架如下表所示：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://github.com/Mahongsheng/my-rpc/raw/main/images/%E7%8E%B0%E6%9C%89RPC%E6%A1%86%E6%9E%B6%E5%AF%B9%E6%AF%94.png",alt:"现有RPC框架对比"}})]),t._v(" "),s("h2",{attrs:{id:"核心原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#核心原理"}},[t._v("#")]),t._v(" 核心原理")]),t._v(" "),s("h3",{attrs:{id:"调用流程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#调用流程"}},[t._v("#")]),t._v(" 调用流程")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://github.com/Mahongsheng/my-rpc/raw/main/images/%E8%B0%83%E7%94%A8%E6%B5%81%E7%A8%8B.jpg",alt:"调用流程"}})]),t._v(" "),s("ul",[s("li",[t._v("Server: Provider，服务提供者")]),t._v(" "),s("li",[t._v("Client: Consumer，服务消费者")]),t._v(" "),s("li",[t._v("Stub: 存根，服务描述")])]),t._v(" "),s("p",[t._v("一次函数调用的流程如下：")]),t._v(" "),s("ol",[s("li",[t._v("首先客户端需要告诉服务端，需要调用的函数，这里函数和进程存在一个映射，客户端远程调用时，需要查一下函数，找到对应的标识，然后执行函数的代码。")]),t._v(" "),s("li",[t._v("客户端需要把本地参数传给远程函数，本地调用的过程中，直接压栈即可，但是在远程调用过程中不在同一个内存里，无法直接传递函数的参数，因此需要客户端把参数转换成字节流，传给服务端，然后服务端将字节流转换成自身能读取的格式，是一个序列化和反序列化的过程。")]),t._v(" "),s("li",[t._v("数据准备好了之后，如何进行传输？网络传输层需要把调用的ID和序列化后的参数传给服务端，然后把计算好的结果序列化传给客户端，因此TCP层即可完成上述过程。")])]),t._v(" "),s("h3",{attrs:{id:"架构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#架构"}},[t._v("#")]),t._v(" 架构")]),t._v(" "),s("div",{staticClass:"language-lua line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-lua"}},[s("code",[t._v("my"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("rpc\n├── my"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("rpc"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("client    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 客户端")]),t._v("\n├── my"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("rpc"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("codec     "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 序列化")]),t._v("\n├── my"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("rpc"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("common    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 反射")]),t._v("\n├── my"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("rpc"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("protocol  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 订单微服务模块")]),t._v("\n├── my"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("rpc"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("server    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 服务端")]),t._v("\n├── my"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("rpc"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("transport "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 网络")]),t._v("\n└── my"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("rpc"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("example   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 例子")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br")])]),s("p",[t._v("模块依赖关系如下图所示，my-rpc-server和my-rpc-client依赖关系相同。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://github.com/Mahongsheng/my-rpc/raw/main/images/%E6%A8%A1%E5%9D%97%E4%BE%9D%E8%B5%96%E5%85%B3%E7%B3%BB.png",alt:"模块依赖关系"}})]),t._v(" "),s("h2",{attrs:{id:"技术栈"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#技术栈"}},[t._v("#")]),t._v(" 技术栈")]),t._v(" "),s("ul",[s("li",[t._v("基础：Java、Maven、反射、JDK动态代理")]),t._v(" "),s("li",[t._v("序列化：FastJson")]),t._v(" "),s("li",[t._v("网络：Jetty、URLConnection")])])])}),[],!1,null,null,null);a.default=e.exports}}]);